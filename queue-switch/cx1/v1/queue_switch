#!/opt/miniconda3/bin/python3

import json
import subprocess
import sys
import re
import datetime
import time


def monitor_queue( queue_to_watch, backfill_qlist ):

	epoch_time = int(time.time())

	fh = open("/var/log/queue_switch.log", "a" )
	dt = datetime.datetime.now().strftime("%Y-%m-%d %H:%M")

	data = json.loads(subprocess.check_output(["/opt/pbs/default/bin/pbsnodes", "-a", "-F", "json" ] ).decode("utf8"))

	op = subprocess.check_output( [ "/opt/pbs/default/bin/qstat", "-q", queue_to_watch ] ).decode("utf8").split("\n")


	queued  =  int( re.split("\s+", op[5] ) [6] )
	running =  int( re.split("\s+", op[5] ) [5] )


	queue_active = False

	if queued > 0 or running > 0:
		#  Remove the backfill_qlist from the nodes
		queue_active = True
		mode = "dedicated"
	else:
		# Queue idle, reallocate the nodes to the backfill qlist
		mode = "non-dedicated"

	modified=False

	for n in data["nodes"]:
		node = data["nodes"][n]

		assigned_queues = node["resources_available"]["Qlist"].split(",")

		if queue_to_watch in assigned_queues: # This node is allocated to the pq

			if queue_active: # Set the "last_switch" resource which indicates when the queue was last seen busy
				cmd = [ "/opt/pbs/default/bin/qmgr", "-c", "set node %s resources_available.last_switch =  %s"% ( n, epoch_time ) ]
#				print(cmd)
				subprocess.check_output( cmd )
				for b in backfill_qlist:
					# Now remove any of the backfill queues if they are still assigned to the node
					if b in assigned_queues:
						cmd = [ "/opt/pbs/default/bin/qmgr", "-c", "set node %s resources_available.Qlist %s %s"% ( n, "-=", b ) ]
#						print(cmd)
						subprocess.check_output( cmd )
						modified = True
				
			else: # Queue empty
				last_switch = node["resources_available"]["last_switch"]  
				if ( epoch_time - int(last_switch) ) > (48 * 3600 ): # Only switch the nodes to non-dedicated use 48h after the queue was last busy
					for b in backfill_qlist:
						# Now add any of the backfill queues that are not yet assigned to the node
						if b not in assigned_queues:
							cmd = [ "/opt/pbs/default/bin/qmgr", "-c", "set node %s resources_available.Qlist %s %s"% ( n, "+=", b ) ]
#							print(cmd)
							subprocess.check_output( cmd )
							modified = True
	
	if modified:
		print("%s\t Switching queue [%s] to %s mode (%s jobs queued, %s jobs running)" % ( dt, queue_to_watch, mode, queued, running  ), file=fh )

	fh.close()

if __name__ == "__main__":
	if len(sys.argv)!=3:
		print("Syntax: %s priority_queue_list backfill_queue_list" % ( sys.argv[0] ) )
		sys.exit(1)
	queues_to_watch = sys.argv[1].split(",")
	backfill_qlist = sys.argv[2].split(",")


	for q in queues_to_watch:
		monitor_queue( q, backfill_qlist )


